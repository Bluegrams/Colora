<Window x:Class="Colora.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="Colora"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources"
        xmlns:local="clr-namespace:Colora"
        xmlns:h="clr-namespace:Colora.Helpers"
        xmlns:m="clr-namespace:Colora.Model"
        x:Name="mainWindow"
        Title="Colora" SizeToContent="WidthAndHeight" ResizeMode="CanMinimize"
        Loaded="Window_Loaded" Closing="Window_Closing" Icon="img/icon.png" SnapsToDevicePixels="True"
        PreviewKeyDown="Window_KeyDown">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Control.Padding" Value="8,0"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.PickFromScreen" Executed="PickFromScreen_Executed"/>
        <CommandBinding Command="local:CustomCommands.ColorDialog" Executed="SelectCommand_Executed"/>
        <CommandBinding Command="local:CustomCommands.MinimalSize" Executed="ScreenPickerVisible_Executed"/>
        <CommandBinding Command="local:CustomCommands.TopMost" Executed="TopMostCommand_Executed"/>
        <CommandBinding Command="New" Executed="NewCommand_Executed"/>
        <CommandBinding Command="local:CustomCommands.PaletteEditor" Executed="PaletteCommand_Executed"/>
        <CommandBinding Command="local:CustomCommands.Settings" Executed="SettingsCommand_Executed"/>
        <CommandBinding Command="Help" Executed="HelpCommand_Executed"/>
    </Window.CommandBindings>
    <DockPanel KeyboardNavigation.TabNavigation="Local">
        <Menu DockPanel.Dock="Top" Background="#dddddd">
            <MenuItem Header="{lex:Loc MainWindow_menColors}" Style="{StaticResource topMenuItem}">
                <MenuItem Header="{lex:Loc MainWindow_menPickScreen}"
                          Icon="{icon:Modern Kind=Crosshair}"
                          Command="local:CustomCommands.PickFromScreen"
                          InputGestureText="{Binding ScreenPicker.ShortcutKeys.DisplayString, Mode=OneWay}"/>
                <MenuItem Header="{lex:Loc MainWindow_menColorDialog}"
                          Icon="{icon:Modern Kind=DrawPixelFillGrid}"
                          Command="local:CustomCommands.ColorDialog"/>
                <Separator/>
                <MenuItem x:Name="menNewPalette" Header="{lex:Loc MainWindow_menNewPalette}"
                          Icon="{icon:Modern Kind=PageNew}" Command="New" />
                <MenuItem x:Name="menDeleteLatest" Header="{lex:Loc MainWindow_menDeleteLatest}"
                          Icon="{icon:Modern Kind=Delete}"
                          Click="menDeleteLatest_Click"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc MainWindow_menView}" Style="{StaticResource topMenuItem}">
                <MenuItem Header="{lex:Loc MainWindow_menIconBar}"
                          IsChecked="{h:Settings IconBarVisible}"
                          IsCheckable="True"/>
                <MenuItem Header="{lex:Loc MainWindow_menMinimalSize}"
                          Command="local:CustomCommands.MinimalSize"
                          IsChecked="{h:Settings ScreenPickerVisible}"/>
                <MenuItem Header="{lex:Loc MainWindow_strColorSettings}"
                          IsChecked="{h:Settings AdvancedColorsVisible}"
                          IsCheckable="True"/>
                <MenuItem Header="{lex:Loc MainWindow_menColorHistory}"
                          IsChecked="{h:Settings ColorHistoryVisible}"
                          IsCheckable="True"/>
                <Separator/>
                <MenuItem Header="{lex:Loc MainWindow_menPaletteEditor}"
                          Icon="{icon:Modern Kind=Paper}"
                          Command="local:CustomCommands.PaletteEditor"/>
                <MenuItem Header="{lex:Loc MainWindow_menTopmost}"
                          Command="local:CustomCommands.TopMost"
                          IsChecked="{Binding ElementName=mainWindow, Path=Topmost}"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc MainWindow_menOptions}" Style="{StaticResource topMenuItem}">
                <MenuItem Header="{lex:Loc MainWindow_menColorSampling}">
                    <MenuItem Header="{lex:Loc MainWindow_menSamplingSingle}"
                              IsChecked="{Binding ScreenPicker.ColorSamplingMode,
                                            Converter={StaticResource enumBool},
                                            ConverterParameter={x:Static m:ColorSamplingMode.Single}}"
                              IsCheckable="True"/>
                    <MenuItem Header="{lex:Loc MainWindow_menSampling3x3}"
                              IsChecked="{Binding ScreenPicker.ColorSamplingMode,
                                            Converter={StaticResource enumBool},
                                            ConverterParameter={x:Static m:ColorSamplingMode.Average3x3}}"
                              IsCheckable="True"/>
                    <MenuItem Header="{lex:Loc MainWindow_menSampling5x5}"
                              IsChecked="{Binding ScreenPicker.ColorSamplingMode,
                                            Converter={StaticResource enumBool},
                                            ConverterParameter={x:Static m:ColorSamplingMode.Average5x5}}"
                              IsCheckable="True"/>
                </MenuItem>
                <MenuItem x:Name="menConfigureShortcut" Header="{lex:Loc MainWindow_menConfigureShortcut}"
                          Click="menConfigureShortcut_Click"/>
                <Separator/>
                <MenuItem Header="{lex:Loc MainWindow_menSettings}"
                          Icon="{icon:Modern Kind=Settings}"
                          Command="local:CustomCommands.Settings"/>
            </MenuItem>
            <MenuItem Header="   _?   " Style="{StaticResource topMenuItem}">
                <MenuItem Header="{lex:Loc MainWindow_menAbout}" Command="Help"
                          Icon="{icon:Modern Kind=InformationCircle}"/>
            </MenuItem>
        </Menu>
        <DockPanel Style="{StaticResource toolBar}" DockPanel.Dock="Top" KeyboardNavigation.TabNavigation="Local"
                   Visibility="{h:Settings IconBarVisible, Converter={StaticResource boolToVis}}">
            
            <ToggleButton Command="local:CustomCommands.PickFromScreen" TabIndex="0"
                          IsChecked="{Binding ScreenPicker.IsCapturing, Mode=OneWay}"
                          ToolTip="{Binding Source={lex:Loc MainWindow_menPickScreen}, Converter={StaticResource UScoreConverter}}">
                <icon:PackIconModern Kind="Crosshair" Width="20" Height="20"/>
            </ToggleButton>
            <Separator/>
            <Button x:Name="butDialog" Command="local:CustomCommands.ColorDialog" TabIndex="1"
                    ToolTip="{Binding Source={lex:Loc MainWindow_menColorDialog}, Converter={StaticResource UScoreConverter}}">
                <icon:PackIconModern Kind="DrawPixelFillGrid"/>
            </Button>
            <ToggleButton x:Name="butTopmost" DockPanel.Dock="Right" TabIndex="3"
                          ToolTip="{Binding Source={lex:Loc MainWindow_menTopmost}, Converter={StaticResource UScoreConverter}}"
                          IsChecked="{Binding ElementName=mainWindow, Path=Topmost}">
                <icon:PackIconModern Kind="Pin"/>
            </ToggleButton>
            <Separator DockPanel.Dock="Right"/>
            <Button DockPanel.Dock="Right" Command="local:CustomCommands.PaletteEditor" 
                    ToolTip="{lex:Loc Global_PaletteEditor}" TabIndex="2">
                <icon:PackIconModern Kind="Paper" Width="20" Height="20"/>
            </Button>
        </DockPanel>
        <StatusBar DockPanel.Dock="Bottom" Height="24" Background="#dddddd">
            <Label x:Name="statInfo" Content="{Binding ScreenPicker.InformationString}" Padding="0"/>
        </StatusBar>
        <StackPanel>
            <Grid>
                <StackPanel x:Name="upperStack" Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center">
                    <GroupBox Header="{lex:Loc Global_ScreenPicker}" Width="123"
                          DataContext="{Binding ScreenPicker}" IsEnabled="{Binding IsCapturing, Mode=OneWay}"
                          Visibility="{h:Settings ScreenPickerVisible, Converter={StaticResource boolToVis}, Mode=OneWay}">
                        <StackPanel>
                            <Border Height="102" Width="102" BorderThickness="1" BorderBrush="Black">
                                <Canvas Width="100" Height="100">
                                    <Image x:Name="imgScreen" Height="100" Width="100"/>
                                    <Line X1="50" X2="50" Y1="0" Y2="100" Stroke="Red"/>
                                    <Line X1="0" X2="100" Y1="50" Y2="50" Stroke="Red"/>
                                </Canvas>
                            </Border>
                            <Label Content="{Binding PositionString, Mode=OneWay}"
                                   HorizontalContentAlignment="Center" FontSize="11"/>
                            <DockPanel>
                                <Label Content="{Binding ElementName=sldZoom, Path=Value}" ContentStringFormat="{}{0}x"/>
                                <Slider x:Name="sldZoom" Minimum="1" Maximum="10"
                                    Value="{Binding ZoomValue}"
                                    TickPlacement="BottomRight" IsSnapToTickEnabled="True"/>
                            </DockPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="{lex:Loc MainWindow_grpColorData}" Width="242" KeyboardNavigation.TabNavigation="Local">
                        <Grid DataContext="{Binding CurrentColor}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Label DataContext="{Binding ElementName=mainWindow, Path=DataContext.ScreenPicker}"
                                       Content="{Binding Path=ColorSamplingMode, Mode=OneWay, Converter={StaticResource enumDescr}}"
                                       Visibility="{Binding Path=IsCapturing, Mode=OneWay, Converter={StaticResource boolToVis}}"/>
                                <Rectangle Grid.Row="0" x:Name="recColor" Fill="{Binding Brush}" Panel.ZIndex="-1"
                                           Stroke="Black" StrokeThickness="1" Height="50" Width="230"/>
                            </Grid>
                            <DockPanel Grid.Row="1" Margin="0,5">
                                <Label Width="32">RGB</Label>
                                <Button x:Name="butCopyRGB" DockPanel.Dock="Right" Click="butCopyRGB_Click"
                                        ToolTip="{lex:Loc MainWindow_strClipboard}" TabIndex="3">
                                    <icon:PackIconModern Kind="PageCopy" Margin="5,0"/>
                                </Button>
                                <Grid TextBox.TextChanged="Grid_TextChanged" TextBox.GotFocus="inputColor_GotFocus" 
                                  TextBox.LostFocus="inputColor_LostFocus" TextBox.PreviewTextInput="inputColor_PreviewTextInput">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="txtR" Grid.Column="0" Tag="Red" TabIndex="0">
                                        <Binding Path="Red" Mode="OneWay"/>
                                    </TextBox>
                                    <TextBox x:Name="txtG" Grid.Column="1" Tag="Green" TabIndex="1">
                                        <Binding Path="Green" Mode="OneWay"/>
                                    </TextBox>
                                    <TextBox x:Name="txtB" Grid.Column="2" Tag="Blue" TabIndex="2">
                                        <Binding Path="Blue" Mode="OneWay"/>
                                    </TextBox>
                                </Grid>
                            </DockPanel>
                            <DockPanel Grid.Row="2" Margin="0,5">
                                <Label Width="32">HEX</Label>
                                <Button x:Name="butCopyHex" DockPanel.Dock="Right" Click="butCopyHex_Click"
                                        ToolTip="{lex:Loc MainWindow_strClipboard}" TabIndex="5">
                                    <icon:PackIconModern Kind="PageCopy" Margin="5,0"/>
                                </Button>
                                <TextBox x:Name="txtHEX" CharacterCasing="Upper" GotFocus="inputColor_GotFocus" LostFocus="inputColor_LostFocus"
                                     TextChanged="txtHEX_TextChanged" Tag="HexString" TabIndex="4">
                                    <Binding Path="HexString" Mode="OneWay"/>
                                </TextBox>
                            </DockPanel>
                            <Grid Grid.Row="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="butAddLast" Grid.Column="0" TabIndex="6"
                                    Content="{lex:Loc MainWindow_butAddLast}" Click="butAddLast_Click"/>
                                <Button x:Name="butAddPalette" Grid.Column="1" TabIndex="7"
                                    Content="{lex:Loc MainWindow_butAddPalette}" Click="butAddPalette_Click" IsEnabled="False"/>
                            </Grid>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </Grid>
            <Expander Grid.Row="3" Header="{lex:Loc MainWindow_strColorSettings}"
                      Width="{Binding ElementName=upperStack, Path=ActualWidth}"
                      DataContext="{Binding CurrentColor}"
                      IsExpanded="{h:Settings AdvancedColorsVisible}">
                <Expander.Resources>
                    <Style TargetType="{x:Type Slider}">
                        <Setter Property="IsSnapToTickEnabled" Value="True"/>
                        <Setter Property="Margin" Value="3"/>
                        <Setter Property="IsMoveToPointEnabled" Value="True"/>
                    </Style>
                </Expander.Resources>
                <TabControl Grid.IsSharedSizeScope="True">
                    <TabControl.Resources>
                        <Style TargetType="Label">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Padding" Value="4,5"/>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="RGB">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" SharedSizeGroup="f"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <!-- RGB 0-255 -->
                                <StackPanel Slider.ValueChanged="rgbSlider_ValueChanged"
                                        Visibility="{h:Settings RGBRangeFloat, Mode=OneWay, Converter={StaticResource invBoolToVis}}">
                                    <DockPanel>
                                        <Label>R</Label>
                                        <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldR, Path=Value}"/>
                                        <Slider x:Name="sldR" Maximum="255" Value="{Binding Red, Mode=OneWay}"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <Label>G</Label>
                                        <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldG, Path=Value}"/>
                                        <Slider x:Name="sldG" Maximum="255" Value="{Binding Green, Mode=OneWay}"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <Label>B</Label>
                                        <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldB, Path=Value}"/>
                                        <Slider x:Name="sldB" Maximum="255" Value="{Binding Blue, Mode=OneWay}"/>
                                    </DockPanel>
                                </StackPanel>
                                <!-- RGB 0-1 -->
                                <StackPanel Slider.ValueChanged="rgbfSlider_ValueChanged"
                                            Visibility="{h:Settings RGBRangeFloat, Mode=OneWay, Converter={StaticResource boolToVis}}">
                                    <DockPanel>
                                        <Label>R</Label>
                                        <Label DockPanel.Dock="Right"
                                               Content="{Binding ElementName=sldRf, Path=Value, Converter={StaticResource dRound}}"/>
                                        <Slider x:Name="sldRf" Maximum="1" Value="{Binding RedF, Mode=OneWay}"
                                                TickFrequency="0.01"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <Label>G</Label>
                                        <Label DockPanel.Dock="Right"
                                               Content="{Binding ElementName=sldGf, Path=Value, Converter={StaticResource dRound}}"/>
                                        <Slider x:Name="sldGf" Maximum="1" Value="{Binding GreenF, Mode=OneWay}"
                                                TickFrequency="0.01"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <Label>B</Label>
                                        <Label DockPanel.Dock="Right"
                                               Content="{Binding ElementName=sldBf, Path=Value, Converter={StaticResource dRound}}"/>
                                        <Slider x:Name="sldBf" Maximum="1" Value="{Binding BlueF, Mode=OneWay}"
                                                TickFrequency="0.01"/>
                                    </DockPanel>
                                </StackPanel>
                                <DockPanel LastChildFill="False">
                                    <CheckBox Content="{lex:Loc MainWindow_chkRGBRange}"
                                              IsChecked="{h:Settings RGBRangeFloat}"
                                              VerticalAlignment="Center" Margin="4,0"/>
                                    <Button Padding="5,1" DockPanel.Dock="Right" Click="butCopyRGB_Click" 
                                            Content="{lex:Loc MainWindow_strClipboard}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="HSB">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" SharedSizeGroup="f"/>
                            </Grid.RowDefinitions>
                            <StackPanel Slider.ValueChanged="hsbSlider_ValueChanged">
                                <DockPanel>
                                    <Label>H</Label>
                                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldHsbH, Path=Value}"/>
                                    <Slider x:Name="sldHsbH" Maximum="360" Value="{Binding Hue, Mode=OneWay}"/>
                                </DockPanel>
                                <DockPanel>
                                    <Label>S</Label>
                                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldHsbS, Path=Value}"/>
                                    <Slider x:Name="sldHsbS" Maximum="100" Value="{Binding SatHSB, Mode=OneWay}"/>
                                </DockPanel>
                                <DockPanel>
                                    <Label>B</Label>
                                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldHsbB, Path=Value}"/>
                                    <Slider x:Name="sldHsbB" Maximum="100" Value="{Binding Bright, Mode=OneWay}"/>
                                </DockPanel>
                                <DockPanel LastChildFill="False">
                                    <Button x:Name="butCopyHSB" Padding="5,1" DockPanel.Dock="Right" Click="butCopyHSB_Click"
                                            Content="{lex:Loc MainWindow_strClipboard}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="HSL">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" SharedSizeGroup="f"/>
                            </Grid.RowDefinitions>
                            <StackPanel Slider.ValueChanged="hslSlider_ValueChanged">
                                <DockPanel>
                                    <Label>H</Label>
                                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldHslH, Path=Value}"/>
                                    <Slider x:Name="sldHslH" Maximum="360" Value="{Binding Hue, Mode=OneWay}"/>
                                </DockPanel>
                                <DockPanel>
                                    <Label>S</Label>
                                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldHslS, Path=Value}"/>
                                    <Slider x:Name="sldHslS" Maximum="100" Value="{Binding SatHSL, Mode=OneWay}"/>
                                </DockPanel>
                                <DockPanel>
                                    <Label>L</Label>
                                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=sldHslL, Path=Value}"/>
                                    <Slider x:Name="sldHslL" Maximum="100" Value="{Binding Light, Mode=OneWay}"/>
                                </DockPanel>
                                <DockPanel LastChildFill="False">
                                    <Button x:Name="butCopyHSL" Padding="5,1" DockPanel.Dock="Right" Click="butCopyHSL_Click" 
                                            Content="{lex:Loc MainWindow_strClipboard}"/>
                                </DockPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="CMYK">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" SharedSizeGroup="f"/>
                            </Grid.RowDefinitions>
                            <DockPanel KeyboardNavigation.TabNavigation="Local">
                                <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                                    <Button x:Name="butCopyCMYK" Padding="5,1"  DockPanel.Dock="Right" Click="butCopyCMYK_Click"
                                            Content="{lex:Loc MainWindow_strClipboard}"
                                            TabIndex="4"/>
                                </DockPanel>
                                <WrapPanel VerticalAlignment="Center" TextBox.TextChanged="CMYK_TextChanged"
                                           TextBox.PreviewTextInput="inputColor_PreviewTextInput" TextBox.GotFocus="inputColor_GotFocus" 
                                           TextBox.LostFocus="inputColor_LostFocus">
                                    <WrapPanel.Resources>
                                        <Style TargetType="Label">
                                            <Setter Property="Height" Value="25"/>
                                        </Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="25"/>
                                            <Setter Property="Margin" Value="5,5"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        </Style>
                                    </WrapPanel.Resources>
                                    <StackPanel Orientation="Horizontal">
                                        <Label>C</Label>
                                        <TextBox x:Name="txtCyan" Text="{Binding Path=Cyan, Mode=OneWay}" TabIndex="0"
                                                 Tag="Cyan"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label>M</Label>
                                        <TextBox x:Name="txtMagenta" Text="{Binding Path=Magenta, Mode=OneWay}" TabIndex="1"
                                                 Tag="Magenta"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label>Y</Label>
                                        <TextBox x:Name="txtYellow" Text="{Binding Path=Yellow, Mode=OneWay}" TabIndex="2"
                                                 Tag="Yellow"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label>K</Label>
                                        <TextBox x:Name="txtKey" Text="{Binding Path=Key, Mode=OneWay}" TabIndex="3"
                                                 Tag="Key"/>
                                    </StackPanel>
                                </WrapPanel>
                            </DockPanel>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Expander>
            <Expander Header="{lex:Loc Global_ColorHistory}"
                      Width="{Binding ElementName=upperStack, Path=ActualWidth}"
                      IsExpanded="{h:Settings ColorHistoryVisible}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="4,2,4,0">
                        <Button x:Name="butNewPalette" Padding="4,0" Command="New"
                                ToolTip="{Binding Source={lex:Loc MainWindow_menNewPalette}, Converter={StaticResource UScoreConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <icon:PackIconModern Kind="PageNew" Margin="0,4,2,2"/>
                                <TextBlock Text="{lex:Loc MainWindow_butNewPalette}"
                                           VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="butDeleteLatest" Padding="4,0" Click="menDeleteLatest_Click"
                                ToolTip="{Binding Source={lex:Loc MainWindow_menDeleteLatest}, Converter={StaticResource UScoreConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <icon:PackIconModern Kind="Delete" Margin="0,4,2,2"/>
                                <TextBlock Text="{lex:Loc MainWindow_butDeleteHistory}"
                                           VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <ListBox x:Name="lstHistory" Height="75" SelectionChanged="lstHistory_SelectionChanged"
                             ScrollViewer.HorizontalScrollBarVisibility="Visible"
                             PreviewMouseDown="lstHistory_MouseDown">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" Height="50" BorderBrush="Black" Margin="0">
                                    <Rectangle Width="60">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{lex:Loc MainWindow_menDeleteHistoryItem}"
                                          Click="menDeleteHistoryItem_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                </StackPanel>
            </Expander>
        </StackPanel>
    </DockPanel>
</Window>
