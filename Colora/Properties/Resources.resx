<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Global_strCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ColorEdit_lblColor" xml:space="preserve">
    <value>Color Value</value>
  </data>
  <data name="ColorEdit_lblComment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="ColorEdit_strInvalidColor" xml:space="preserve">
    <value>Error: The given color code is not valid.</value>
  </data>
  <data name="ColorEdit_Title" xml:space="preserve">
    <value>Edit Color</value>
  </data>
  <data name="PaletteWindow_menEdit" xml:space="preserve">
    <value>_Edit Color</value>
  </data>
  <data name="PaletteWindow_menFile" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="PaletteWindow_menOpen" xml:space="preserve">
    <value>_Open Palette</value>
  </data>
  <data name="PaletteWindow_menSave" xml:space="preserve">
    <value>_Save Palette</value>
  </data>
  <data name="PaletteWindow_strDelete" xml:space="preserve">
    <value>Selected color will be removed from palette.</value>
  </data>
  <data name="PaletteWindow_strErrorOpen" xml:space="preserve">
    <value>Failed to read palette from specified file.
Error code: </value>
  </data>
  <data name="PaletteWindow_strErrorSave" xml:space="preserve">
    <value>Failed to save palette to specified file.
Error code: </value>
  </data>
  <data name="PaletteWindow_strInvalidFormat" xml:space="preserve">
    <value>Failed to open palette file. File format may be wrong. 
Error code: </value>
  </data>
  <data name="PaletteWindow_strNotSaved" xml:space="preserve">
    <value>The current color palette is unsaved. Continue?</value>
  </data>
  <data name="PaletteWindow_Title" xml:space="preserve">
    <value>Palette Editor</value>
  </data>
  <data name="MainWindow_butAddLast" xml:space="preserve">
    <value>Add to History</value>
  </data>
  <data name="MainWindow_butAddPalette" xml:space="preserve">
    <value>Add to Palette</value>
  </data>
  <data name="MainWindow_grpColorData" xml:space="preserve">
    <value>Color Data</value>
  </data>
  <data name="MainWindow_grpLatest" xml:space="preserve">
    <value>Color History</value>
  </data>
  <data name="MainWindow_grpScreenPicker" xml:space="preserve">
    <value>Screen Picker</value>
  </data>
  <data name="MainWindow_menAbout" xml:space="preserve">
    <value>A_bout</value>
  </data>
  <data name="MainWindow_menColorDialog" xml:space="preserve">
    <value>Open _Color Dialog</value>
  </data>
  <data name="MainWindow_menMinimalSize" xml:space="preserve">
    <value>_Screen Picker</value>
  </data>
  <data name="MainWindow_menNewPalette" xml:space="preserve">
    <value>_New Palette from History</value>
  </data>
  <data name="MainWindow_menOptions" xml:space="preserve">
    <value>_Options</value>
  </data>
  <data name="MainWindow_menPickScreen" xml:space="preserve">
    <value>Pick from _Screen</value>
  </data>
  <data name="MainWindow_menTopmost" xml:space="preserve">
    <value>Pin on _Top</value>
  </data>
  <data name="MainWindow_menView" xml:space="preserve">
    <value>_View</value>
  </data>
  <data name="MainWindow_strColorSettings" xml:space="preserve">
    <value>More c_olor models</value>
  </data>
  <data name="MainWindow_strCopy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="MainWindow_strShortcut" xml:space="preserve">
    <value>{0} to pick colors from screen.</value>
  </data>
  <data name="MainWindow_strClipboard" xml:space="preserve">
    <value>To Clipboard</value>
  </data>
  <data name="MainWindow_menDeleteLatest" xml:space="preserve">
    <value>Clear _History</value>
  </data>
  <data name="MainWindow_menPaletteEditor" xml:space="preserve">
    <value>_Palette Editor</value>
  </data>
  <data name="MainWindow_menGetUpdates" xml:space="preserve">
    <value>Get _Updates</value>
  </data>
  <data name="MainWindow_menColors" xml:space="preserve">
    <value>C_olors</value>
  </data>
  <data name="HotKeyInputWindow_grpHeader" xml:space="preserve">
    <value>Press the desired key combination</value>
  </data>
  <data name="MainWindow_menConfigureShortcut" xml:space="preserve">
    <value>Configure _Keyboard Shortcut...</value>
  </data>
  <data name="HotKeyInputWindow_Title" xml:space="preserve">
    <value>Color Picking Shortcut</value>
  </data>
  <data name="MainWindow_strHotKeyFailed" xml:space="preserve">
    <value>Registering shortcut '{0}' failed.
This could be caused by another app using the same shortcut.</value>
  </data>
  <data name="MainWindow_menIconBar" xml:space="preserve">
    <value>_Icon Bar</value>
  </data>
  <data name="MainWindow_menColorHistory" xml:space="preserve">
    <value>Color _History</value>
  </data>
  <data name="MainWindow_menDeleteHistoryItem" xml:space="preserve">
    <value>Delete Color</value>
  </data>
  <data name="MainWindow_strNoShortcut" xml:space="preserve">
    <value>Error: No shortcut registered.</value>
  </data>
</root>